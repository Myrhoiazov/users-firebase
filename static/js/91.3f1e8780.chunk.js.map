{"version":3,"file":"static/js/91.3f1e8780.chunk.js","mappings":"4OAcMA,EAAiB,CACrBC,OAHEC,0CAIFC,WAJED,8BAKFE,YALEF,qEAMFG,UANEH,cAOFI,cAPEJ,0BAQFK,kBAREL,eASFM,MATEN,6CAYSO,GAAMC,EAAAA,EAAAA,IAAcV,GACpBW,GAAKC,EAAAA,EAAAA,IAAaH,GAClBI,GAAUC,EAAAA,EAAAA,IAAWL,E,+NChB5BM,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,+BACZC,MAAON,EAAAA,KACJM,MAAM,iBACND,SAAS,2BACZE,SAAUP,EAAAA,KAAaK,WAAWF,IAAI,EAAG,8BACzCK,gBAAiBR,EAAAA,KAAaS,MAC5B,CAACT,EAAAA,GAAQ,YAAa,MACtB,0BAIEU,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAa,8HAQrBE,EAAUF,EAAAA,GAAAA,IAAU,2DAKpBG,EAAgB,CACpBZ,KAAM,GACNI,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAoFnB,EAjFiB,WACf,OAAwBO,EAAAA,EAAAA,UAAS,MAAK,eAAzBC,GAAF,KAAS,MACdC,GAAOC,EAAAA,EAAAA,IAAQzB,EAAAA,GAEf0B,EAAgB,yCAAG,WAAOC,EAAO,GAAD,8EAAa,OAATC,EAAS,EAATA,UAAS,mBAExBC,EAAAA,EAAAA,IACrBL,EACAG,EAAOd,MACPc,EAAOb,UACP,KAAD,EAJKgB,EAAQ,OAKdP,EAAQO,EAASC,MACjBH,IAAY,gDAEZI,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAZqB,wCActB,OACE,UAACC,EAAA,EAAS,CACRC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRC,MAAO,SACP,WAEF,SAACC,EAAA,EAAU,CAACP,GAAI,CAAEQ,GAAI,GAAKC,QAAQ,KAAI,SAAC,kBAGxC,SAAC,KAAM,CACLvB,cAAeA,EACfwB,iBAAkBvC,EAClBwC,SAAUpB,EAAiB,SAE1B,gBAAGqB,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAO,OACjB,UAAC,KAAI,CAACC,aAAa,MAAK,WACtB,UAACC,EAAA,EAAG,CAACf,GAAI,CAAEgB,aAAc,QAAS,WAChC,SAAClC,EAAK,CAACmC,KAAK,OAAO3C,KAAK,OAAO4C,YAAY,wBAC1CN,EAAOtC,MAAQuC,EAAQvC,MACtB,SAACW,EAAO,UAAE2B,EAAOtC,OACf,SAGN,UAACyC,EAAA,EAAG,CAACf,GAAI,CAAEgB,aAAc,QAAS,WAChC,SAAClC,EAAK,CAACmC,KAAK,QAAQ3C,KAAK,QAAQ4C,YAAY,UAC5CN,EAAOlC,OAASmC,EAAQnC,OACvB,SAACO,EAAO,UAAE2B,EAAOlC,QACf,SAGN,UAACqC,EAAA,EAAG,CAACf,GAAI,CAAEgB,aAAc,QAAS,WAChC,SAAClC,EAAK,CAACmC,KAAK,WAAW3C,KAAK,WAAW4C,YAAY,yCAClDN,EAAOjC,UAAYkC,EAAQlC,UAC1B,SAACM,EAAO,UAAE2B,EAAOjC,WACf,SAGN,UAACoC,EAAA,EAAG,CAACf,GAAI,CAAEgB,aAAc,QAAS,WAChC,SAAClC,EAAK,CACJmC,KAAK,WACL3C,KAAK,kBACL4C,YAAY,yCAEbN,EAAOhC,iBAAmBiC,EAAQjC,iBACjC,SAACK,EAAO,UAAE2B,EAAOhC,kBACf,SAGN,SAACuC,EAAA,EAAM,CAACF,KAAK,SAASG,WAAS,EAACX,QAAQ,YAAW,SAAC,aAG/C,MAKjB,C","sources":["firebaseConfig.js","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGEING_SENDER_ID,\n  REACT_APP_APP_ID,\n} = process.env;\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  databaseURL: REACT_APP_DATABASE_URL,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGEING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { Container } from '@mui/system';\nimport { Box, Button, Typography } from '@mui/material';\nimport styled from 'styled-components';\nimport { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\nimport { app } from 'firebaseConfig';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Please enter your full name'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Please enter your email'),\n  password: Yup.string().required().min(6, 'Please enter your password'),\n  confirmPassword: Yup.string().oneOf(\n    [Yup.ref('password'), null],\n    'Passwords must match'\n  ),\n});\n\nconst Input = styled(Field)`\n  font-size: 16px;\n  display: block;\n  width: 400px;\n  padding: 10px 10px;\n  margin-bottom: 5px;\n`;\n\nconst MyError = styled.div`\n  color: red;\n  font-size: 14px;\n`;\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst AuthPage = () => {\n  const [user, setUser] = useState(null);\n  const auth = getAuth(app);\n\n  const handleSubmitForm = async (values, { resetForm }) => {\n    try {\n      const response = await createUserWithEmailAndPassword(\n        auth,\n        values.email,\n        values.password\n      );\n      setUser(response.user);\n      resetForm();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        width: '100vw',\n      }}\n    >\n      <Typography sx={{ mb: 2 }} variant=\"h4\">\n        Registration\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmitForm}\n      >\n        {({ errors, touched }) => (\n          <Form autoComplete=\"off\">\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input type=\"name\" name=\"name\" placeholder=\"Ім'я\" />\n              {errors.name && touched.name ? (\n                <MyError>{errors.name}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              {errors.email && touched.email ? (\n                <MyError>{errors.email}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input type=\"password\" name=\"password\" placeholder=\"Пароль\" />\n              {errors.password && touched.password ? (\n                <MyError>{errors.password}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"Пароль\"\n              />\n              {errors.confirmPassword && touched.confirmPassword ? (\n                <MyError>{errors.confirmPassword}</MyError>\n              ) : null}\n            </Box>\n\n            <Button type=\"submit\" fullWidth variant=\"contained\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default AuthPage;\n"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","db","getFirestore","storage","getStorage","SignupSchema","Yup","shape","name","min","max","required","email","password","confirmPassword","oneOf","Input","styled","Field","MyError","initialValues","useState","setUser","auth","getAuth","handleSubmitForm","values","resetForm","createUserWithEmailAndPassword","response","user","console","log","Container","sx","display","flexDirection","alignItems","justifyContent","height","width","Typography","mb","variant","validationSchema","onSubmit","errors","touched","autoComplete","Box","marginBottom","type","placeholder","Button","fullWidth"],"sourceRoot":""}