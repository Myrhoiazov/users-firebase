{"version":3,"file":"static/js/126.99cce646.chunk.js","mappings":"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","sources":["components/PasswordIndicator/PasswordIndicator.jsx","components/Auth/Registration/Registration.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Box } from '@mui/material';\nimport zxcvbn from 'zxcvbn';\n\nconst PasswordIndicator = ({ password }) => {\n  const result = zxcvbn(password);\n\n  const num = (result.score * 100) / 4;\n\n  const progressColor = () => {\n    switch (result.score) {\n      case 0:\n        return '#828282';\n\n      case 1:\n        return '#EA1111';\n\n      case 2:\n        return '#FFAD00';\n\n      case 3:\n        return '#9bc158';\n\n      case 4:\n        return '#00b500';\n\n      default:\n        return 'none';\n    }\n  };\n\n  const changePasswordColor = () => ({\n    width: `${num}%`,\n    backgroundColor: progressColor(),\n    height: '5px',\n  });\n\n  return (\n    <>\n      <Box sx={{ height: '5px', width: '100%', backgroundColor: '#eff0eb' }}>\n        <Box sx={changePasswordColor()}></Box>\n      </Box>\n    </>\n  );\n};\n\nexport default PasswordIndicator;\n","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { Container } from '@mui/system';\nimport { Box, Button, Typography } from '@mui/material';\nimport styled from 'styled-components';\nimport { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\nimport { app } from 'firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport PasswordIndicator from 'components/PasswordIndicator';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Please enter your full name'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Please enter your email'),\n  password: Yup.string().required().min(6, 'Please enter your password'),\n  confirmPassword: Yup.string().oneOf(\n    [Yup.ref('password'), null],\n    'Passwords must match'\n  ),\n});\n\nconst Input = styled(Field)`\n  font-size: 16px;\n  display: block;\n  width: 400px;\n  padding: 10px 10px;\n  margin-bottom: 5px;\n`;\n\nconst MyError = styled.div`\n  color: red;\n  font-size: 14px;\n`;\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Registration = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [user, setUser] = useState(null);\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n  const auth = getAuth(app);\n\n  const handleSubmitForm = async (values, { resetForm }) => {\n    try {\n      const response = await createUserWithEmailAndPassword(\n        auth,\n        values.email,\n        values.password\n      );\n      setUser(response.user);\n      resetForm();\n      navigate('/login', { replace: true });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const myHandleChange = (e, values, handleChange) => {\n    handleChange(e);\n    setPassword(values.password);\n  };\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        width: '100vw',\n      }}\n    >\n      <Typography sx={{ mb: 2 }} variant=\"h4\">\n        Registration\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitForm}\n      >\n        {({ errors, touched, values, handleChange }) => (\n          <Form autoComplete=\"off\">\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input type=\"text\" name=\"name\" placeholder=\"Ім'я\" />\n              {errors.name && touched.name ? (\n                <MyError>{errors.name}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              {errors.email && touched.email ? (\n                <MyError>{errors.email}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Пароль\"\n                onChange={e => myHandleChange(e, values, handleChange)}\n              />\n              <PasswordIndicator password={password} />\n              {errors.password && touched.password ? (\n                <MyError>{errors.password}</MyError>\n              ) : null}\n            </Box>\n\n            <Box sx={{ marginBottom: '20px' }}>\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"Пароль\"\n              />\n              {errors.confirmPassword && touched.confirmPassword ? (\n                <MyError>{errors.confirmPassword}</MyError>\n              ) : null}\n            </Box>\n\n            <Button type=\"submit\" fullWidth variant=\"contained\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default Registration;\n","\nimport React from 'react';\nimport Registration from 'components/Auth/Registration';\n\nconst RegistrationPage = () => {\n\n  return (\n    <Registration/>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["password","result","zxcvbn","num","score","progressColor","Box","sx","height","width","backgroundColor","validationSchema","Yup","name","min","max","required","email","confirmPassword","oneOf","Input","styled","Field","MyError","initialValues","useState","setUser","setPassword","navigate","useNavigate","auth","getAuth","app","handleSubmitForm","values","resetForm","createUserWithEmailAndPassword","response","user","replace","console","log","Container","display","flexDirection","alignItems","justifyContent","Typography","mb","variant","onSubmit","errors","touched","handleChange","autoComplete","marginBottom","type","placeholder","onChange","e","myHandleChange","Button","fullWidth"],"sourceRoot":""}